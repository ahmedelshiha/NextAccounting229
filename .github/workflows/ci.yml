name: CI

on:
  push:
    branches: [ main, ai_main_2843bb57fb55 ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Enable pnpm (corepack)
        run: corepack enable && corepack prepare pnpm@latest --activate

      - name: Setup pnpm action (ensures pnpm in PATH)
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Verify pnpm and fallback install
        run: |
          echo "which pnpm: $(which pnpm || echo 'not found')"
          if command -v pnpm >/dev/null 2>&1; then
            echo "pnpm present: $(pnpm -v)"
          else
            echo "pnpm not found â€” attempting corepack prepare"
            corepack enable || true
            corepack prepare pnpm@latest --activate || true
            if command -v pnpm >/dev/null 2>&1; then
              echo "pnpm installed via corepack: $(pnpm -v)"
            else
              echo "corepack failed, installing pnpm via npm"
              npm install -g pnpm@8 || true
              echo "pnpm after npm install: $(pnpm -v || echo 'still not found')"
            fi
          fi

      - name: Install dependencies
        env:
          PNPM_ENABLE_FROZEN_LOCKFILE: 'false'
        run: pnpm install --no-frozen-lockfile

      - name: Run ESLint
        run: pnpm run lint

      - name: Typecheck (tsc + prisma generate)
        run: pnpm run typecheck

      - name: Run tests (vitest)
        env:
          CI: true
          NODE_OPTIONS: --max-old-space-size=2048
        run: pnpm exec vitest run --threads=false

      - name: Upload vitest results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vitest-results
          path: tests
