name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      CI: true
      PRISMA_MIGRATION_ENGINE_ADVISORY_LOCK_TIMEOUT: "60000"
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Ensure pnpm in PATH
        run: |
          if command -v pnpm >/dev/null 2>&1; then
            echo "$(pnpm bin)" >> $GITHUB_PATH
          else
            corepack enable && corepack prepare pnpm@latest --activate
            echo "$(pnpm bin)" >> $GITHUB_PATH
          fi

      - name: Show pnpm version
        run: pnpm -v

      - name: Install dependencies (with lockfile if present)
        run: |
          if [ -f pnpm-lock.yaml ]; then
            echo "pnpm-lock.yaml found -> using --frozen-lockfile"
            pnpm install --frozen-lockfile
          else
            echo "pnpm-lock.yaml not found -> using --no-frozen-lockfile"
            pnpm install --no-frozen-lockfile
          fi

      - name: Generate Prisma Client
        run: pnpm db:generate

      - name: Run Prisma migrations (if DATABASE_URL is provided)
        if: ${{ env.DATABASE_URL != '' }}
        run: |
          pnpm db:migrate || pnpm exec prisma migrate resolve --applied 0002_add_tenant_columns || true
          pnpm db:migrate

      - name: Seed database (if DATABASE_URL is provided)
        if: ${{ env.DATABASE_URL != '' }}
        run: pnpm db:seed

      - name: Typecheck
        run: pnpm typecheck

      - name: Lint
        run: pnpm lint

      - name: Unit tests (thresholds)
        run: pnpm test:thresholds

      - name: Build
        run: pnpm build
