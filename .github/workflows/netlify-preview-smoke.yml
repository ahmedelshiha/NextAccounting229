name: Netlify Preview Smoke Test

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  wait-and-smoke:
    runs-on: ubuntu-latest
    env:
      NETLIFY_API_BASE: https://api.netlify.com/api/v1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure jq is available
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Validate required secrets
        run: |
          if [ -z "${{ secrets.NETLIFY_AUTH_TOKEN }}" ]; then echo 'Missing NETLIFY_AUTH_TOKEN secret' && exit 1; fi
          if [ -z "${{ secrets.NETLIFY_SITE_ID }}" ]; then echo 'Missing NETLIFY_SITE_ID secret' && exit 1; fi

      - name: Poll Netlify for deploy preview URL
        id: get_preview
        run: |
          PR_BRANCH="${{ github.head_ref }}"
          echo "Looking up Netlify deploy for branch: $PR_BRANCH"
          AUTH_HEADER="Authorization: Bearer $NETLIFY_AUTH_TOKEN"

          ATTEMPTS=60
          SLEEP=10
          PREVIEW_URL=""

          for i in $(seq 1 $ATTEMPTS); do
            echo "Attempt $i/$ATTEMPTS"
            # Query latest deploys for the site
            res=$(curl -s -H "$AUTH_HEADER" "$NETLIFY_API_BASE/sites/$NETLIFY_SITE_ID/deploys")
            if [ -z "$res" ]; then echo "Empty response from Netlify API"; sleep $SLEEP; continue; fi

            # Try to find a deploy that matches the PR branch and is ready
            preview=$(echo "$res" | jq -r --arg BR "$PR_BRANCH" '.[] | select(.branch == $BR) | select(.state == "ready") | .ssl_url' | head -n1)
            if [ -n "$preview" ] && [ "$preview" != "null" ]; then
              PREVIEW_URL="$preview"
              echo "Found ready preview: $PREVIEW_URL"
              break
            fi

            # If not ready yet, also capture building deploy url to show progress
            building=$(echo "$res" | jq -r --arg BR "$PR_BRANCH" '.[] | select(.branch == $BR) | select(.state == "building") | .deploy_url' | head -n1)
            if [ -n "$building" ] && [ "$building" != "null" ]; then
              echo "Found building deploy: $building"
            fi

            sleep $SLEEP
          done

          if [ -z "$PREVIEW_URL" ]; then echo "Timed out waiting for Netlify preview for branch $PR_BRANCH" && exit 1; fi
          echo "preview_url=$PREVIEW_URL" >> $GITHUB_OUTPUT

      - name: Run smoke test against preview
        run: |
          URL="${{ steps.get_preview.outputs.preview_url }}"
          echo "Testing $URL"
          # Check root returns 200
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$URL/")
          echo "Root status: $HTTP_STATUS"
          if [ "$HTTP_STATUS" -ne 200 ]; then echo "Smoke test failed: root returned $HTTP_STATUS" && exit 1; fi
          echo "Smoke test passed"
